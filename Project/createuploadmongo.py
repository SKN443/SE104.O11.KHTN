# -*- coding: utf-8 -*-
"""CreateUploadMongo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12OXSnvB-cry29PpCYDlsDY1wrewqBWgu
"""

!curl ipecho.net/plain

!python -m pip install "pymongo[srv]"

from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

uri = "mongodb+srv://anothernhan:trongnhan258@sebruh.7itle96.mongodb.net/?retryWrites=true&w=majority"

# Create a new client and connect to the server
client = MongoClient(uri, server_api=ServerApi('1'))

# Send a ping to confirm a successful connection
try:
    client.admin.command('ping')
    print("Pinged your deployment. You successfully connected to MongoDB!")
except Exception as e:
    print(e)

db = client.test
db

# Quick start!
# db.test.count_documents({'x': 1})

# db.test.insert_one({'x': 1})
# db.test.insert_many([{'x' : 1}, {'x' : 2}])

# list(db.test.find()) # list all
# list(db.test.find({'favorite_sport': 'football'}))
# list(db.test.find({'favorite_sport': 'football'}), {'favorite_sport' : 1, 'favorite_animal' : 0})
# list(db.test.find({'$or': [ {'name': 'Jordi Gonzalez'},{'name': 'Maria Smith'} ]}))
# db.test.find_one({'x': 1})

# db.test.update_one({'favorite_animal': 'ring-tailed lemur'}, {'$set':{'favorite_animal': 'm√®o'}}) #set, unset, inc, min/max, mul
# db.test.update_many({'isActive': True }, {'$set' : { 'isActive': False }} )

# db.test.delete_one({'x' : 1})
# db.test.delete_many({"Name": {"$regex": "^A"}})

!gdown 1xOPTOL-Xsl63sbafcuiI8ZwevkkSgDQz

!unzip /content/imgdata.zip

!gdown 1QpuKQm2rxUU_FyHdD9xSjBXrg-hcvMJm

db.drop_collection('images')

import glob
import cv2
import json
import io
from PIL import Image

dct = []
emb = {}
with open('/content/database_tmp.json') as f:
    tmps = json.load(f)
    for tmp in tmps:
        emb[tmp['metadata']['path']] = tmp['vector']
for img_path in glob.glob('/content/imgdata/*.jpg'):
    img = Image.open(img_path)

    image_bytes = io.BytesIO()
    img.save(image_bytes, format='JPEG')

    dct.append({
        'image': image_bytes.getvalue(),
        'path': img_path[len('/content/'):],
        'vector': emb[img_path[len('/content/'):]],
        'flag' : True
    })

db.database.insert_many(dct)